import Head from "next/head";

import styles from "../styles/Home.module.css";

import { useEffect, useState } from "react";

import dynamic from "next/dynamic";

import Navbar from "../componenets/Navbar";

import Donate from "../componenets/brand/donate";

import Bodypicture from "../componenets/Bodypicture";

import Button from "../componenets/Button";

import MainCard from "../componenets/MainCard";

import Mission from "../componenets/mission/Mission";

import Products from "../componenets/products/Products";

import Work from "../componenets/work/Work";

import Footer from "../componenets/footer/Footer";

import CaseStudy from "../componenets/case-study/CaseStudy";

import { ref } from "firebase/storage";

const DynamicHeader = dynamic(() => Home, {
  ssr: false,
});

import {
  signInWithGooglePopUp,
  loginWithEmailandPassword,
  createUserDocument,
  createAuthUserWithEmailAndPassword,
  logOut,
  userAuthState,
  storage
} from "../auth/firebase/firebase";
import { isAuth } from "../auth/helpers/auth";

export default function Home() {
  const [auth, setAuth] = useState(false);

  const [state, setState] = useState({
    name: "",
    email: "",
    password: "",
    confirmPassword: "",
  });

  const { name, email, password, confirmPassword } = state;

  const logInHandler = async (e) => {
    e.preventDefault();

    const { user } = await signInWithGooglePopUp();

    console.log("from login function: ", user);

    const userRef = await createUserDocument(user);

    console.log(userRef);

    setAuth(true);
  };

  const authSubmitHandler = async (e) => {
    e.preventDefault();

    if (password !== confirmPassword) {
      alert("passwords don't match");
      return;
    }

    try {
      const { user } = await createAuthUserWithEmailAndPassword(
        email,
        password
      );

      console.log(user);

      const displayName = name;

      const userRef = await createUserDocument(user, { displayName });
      console.log(userRef);

      setAuth(true);
    } catch (error) {
      console.log("user creatinon error", error);
    }
  };

  const authSignHandler = async (e) => {
    e.preventDefault();

    try {
      const { user } = await loginWithEmailandPassword(email, password);

      console.log(user);

      setAuth(true);
    } catch (error) {
      console.log(error);
    }
  };

  const inputChangeHandler = (name) => (e) => {
    setState({ ...state, [name]: e.target.value });
    console.log(e.target.value);
  };

  const logOutHandler = async (e) => {
    e.preventDefault();

    try {
      const response = await logOut();

      setAuth(false);
    } catch (error) {
      console.log(error);
    }
  };

  const [imageList, setImageList] = useState([]);

  const imageListRef = ref(storage, "images/");

  const imageListHandler = async () => {
    try {
      const response = await listAll(imageListRef);

      response.items.forEach((itemRef) => {
        // All the items under listRef.
        console.log(itemRef);
      });

      setImageList(response.items);

      console.log(response);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    const token = userAuthState();

    if (token) {
      isAuth();
    }
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Up Green 🍃</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <Navbar /> */}
      <Bodypicture />
      <Button />
      <MainCard />
      <Mission />
      <Products />
      
      <Work />
      <CaseStudy/>
      <Donate />
      <Footer />
    </div>
  );
}
