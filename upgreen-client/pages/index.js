import Head from "next/head";

import styles from "../styles/Home.module.css";

import { useEffect, useState } from "react";

import dynamic from 'next/dynamic'

import Navbar from '../componenets/Navbar'

import Bodypicture from '../componenets/Bodypicture'

import Button from "../componenets/Button";

import MainCard from "../componenets/MainCard";

import Mission from "../componenets/mission/Mission"

import Products from "../componenets/products/Products"

const DynamicHeader = dynamic(() => Home, {
  ssr: false,
})

import {
  signInWithGooglePopUp,
  loginWithEmailandPassword,
  createUserDocument,
  createAuthUserWithEmailAndPassword,
  logOut,
  userAuthState
} from "../auth/firebase/firebase";
import { isAuth } from "../auth/helpers/auth";

export default function Home() {
  const [auth, setAuth] = useState(false);

  const [state, setState] = useState({
    name: "",
    email: "",
    password: "",
    confirmPassword: "",
  });

  const { name, email, password, confirmPassword } = state;

  const logInHandler = async (e) => {
    e.preventDefault();

    const { user } = await signInWithGooglePopUp();

    console.log("from login function: ", user);

    const userRef = await createUserDocument(user);

    console.log(userRef);

    setAuth(true);
  };

  const authSubmitHandler = async (e) => {
    e.preventDefault();

    if (password !== confirmPassword) {
      alert("passwords don't match");
      return;
    }

    try {
      const { user } = await createAuthUserWithEmailAndPassword(
        email,
        password
      );

      console.log(user);

      const displayName = name;

      const userRef = await createUserDocument(user, { displayName });
      console.log(userRef);

      setAuth(true);
    } catch (error) {
      console.log("user creatinon error", error);
    }
  };


  const authSignHandler = async (e) => {
    e.preventDefault();

    try {

      const { user } = await loginWithEmailandPassword(email, password);

      console.log(user);

      setAuth(true);

    } catch (error) {

      console.log(error);

    }

  }

  const inputChangeHandler = (name) => (e) => {
    setState({ ...state, [name]: e.target.value });
    console.log(e.target.value);
  };


  const logOutHandler = async (e) => {

    e.preventDefault();

    try {

      const response = await logOut();

      setAuth(false);

    } catch (error) {

      console.log(error);

    }

  }


  useEffect(() => {


    const token = userAuthState();


    if (token) {
      isAuth()
    }



  }, []);




  return (
    <div className={styles.container}>
      <Head>
        <title>Up Green üçÉ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <Bodypicture />
      <Button />
      <MainCard />
      <Mission />
      <Products />

      {/* <main className={styles.main}>
        {isAuth() && <button onClick={logOutHandler}>Log Out</button>}

        {!isAuth() && (
          <>
            <button onClick={logInHandler}>Log In with Google</button>

            <form onSubmit={authSignHandler}>
              <label>Sign In</label>



              <input
                type="email"
                placeholder="Email"
                value={email}
                onChange={inputChangeHandler("email")}
                required
              />

              <input
                type="password"
                placeholder="Password"
                value={password}
                onChange={inputChangeHandler("password")}
                required
              />


              <button type="submit">Log In</button>
            </form>

            <form onSubmit={authSubmitHandler}>
              <label>Sign Up</label>

              <input
                type="text"
                placeholder="Name"
                onChange={inputChangeHandler("name")}
                value={name}
                required
              />

              <input
                type="email"
                placeholder="Email"
                value={email}
                onChange={inputChangeHandler("email")}
                required
              />

              <input
                type="password"
                placeholder="Password"
                value={password}
                onChange={inputChangeHandler("password")}
                required
              />

              <input
                type="password"
                placeholder="Password"
                value={confirmPassword}
                onChange={inputChangeHandler("confirmPassword")}
                required
              />

              <button type="submit">sign Up</button>
            </form> 

          </>
        )}
          </main> */}
    </div>
  );
}
